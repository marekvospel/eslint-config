
module.exports = {
  plugins: ['@typescript-eslint'],
  extends: ['vospel/base', 'plugin:@typescript-eslint/eslint-recommended'],
  parser: require.resolve('@typescript-eslint/parser'),
  parserOptions: {
    sourceType: 'module',
  },
  rules: {
    '@typescript-eslint/adjacent-overload-signatures': ['warn'],
    '@typescript-eslint/array-type': ['warn', { 'array': true }],
    // '@typescript-eslint/await-thenable': ['error'], (requires parserOptions.project)
    '@typescript-eslint/ban-types': ['warn'],
    '@typescript-eslint/consistent-indexed-object-style': ['warn', 'index-signature'],
    '@typescript-eslint/consistent-type-assertions': ['error', 'as'],
    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
    '@typescript-eslint/explicit-function-return-type': ['warn'],
    '@typescript-eslint/member-delimiter-style': ['warn'],
    '@typescript-eslint/method-signature-style': ['warn', 'method'],
    '@typescript-eslint/no-empty-interface': ['error', { 'allowSingleExtends': false }],
    '@typescript-eslint/no-extraneous-class': ['warn', {
      'allowConstructorOnly': true,
      'allowStaticOnly': true,
      'allowWithDecorator': true,
    }],
    '@typescript-eslint/no-floating-promises': ['warn', {
      'ignoreVoid': true,
    }],
    '@typescript-eslint/no-extra-non-null-assertion': ['warn'],
    '@typescript-eslint/no-for-in-array': ['error'],
    '@typescript-eslint/no-inferable-types': ['warn'],
    '@typescript-eslint/no-misused-new': ['error'],
    '@typescript-eslint/no-misused-promises': ['error'],
    '@typescript-eslint/no-namespace': ['error'],
    '@typescript-eslint/no-non-null-asserted-optional-chain': ['warn'],
    '@typescript-eslint/no-non-null-assertion': ['warn'],
    '@typescript-eslint/no-require-imports': ['warn'],
    '@typescript-eslint/no-this-alias': ['error'],
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': ['error'],
    '@typescript-eslint/no-unnecessary-condition': ['error'],
    '@typescript-eslint/no-unnecessary-type-assertion': ['warn'],
    '@typescript-eslint/no-unnecessary-type-constraint': ['warn'],
    '@typescript-eslint/no-unsafe-argument': ['warn'],
    '@typescript-eslint/no-unsafe-assignment': ['warn'],
    '@typescript-eslint/no-unsafe-call': ['warn'],
    '@typescript-eslint/no-unsafe-member-access': ['warn'],
    '@typescript-eslint/no-unsafe-return': ['warn'],
    '@typescript-eslint/no-var-requires': ['warn'],
    '@typescript-eslint/prefer-as-const': ['warn'],
    '@typescript-eslint/prefer-for-of': ['warn'],
    '@typescript-eslint/prefer-includes': ['warn'],
    '@typescript-eslint/prefer-namespace-keyword': ['error'],
    '@typescript-eslint/prefer-nullish-coalescing': ['warn'],
    '@typescript-eslint/prefer-optional-chain': ['warn'],
    '@typescript-eslint/prefer-reduce-type-parameter': ['warn'],
    '@typescript-eslint/prefer-string-starts-ends-with': ['warn'],
    '@typescript-eslint/prefer-ts-expect-error': ['warn'],
    '@typescript-eslint/restrict-plus-operands': ['error'],
    '@typescript-eslint/restrict-template-expressions': ['error'],
    '@typescript-eslint/type-annotation-spacing': ['warn', {
      'before': false,
      'after': true,
    }],

    'brace-style': ['off'],
    '@typescript-eslint/brace-style': ['warn'],
    'comma-dangle': ['off'],
    '@typescript-eslint/comma-dangle': ['warn', 'always-multiline'],
    'comma-spacing': ['off'],
    '@typescript-eslint/comma-spacing': ['warn', { before: false, after: true }],
    'indent': ['off'],
    '@typescript-eslint/indent': ['warn', 2],
  },
}